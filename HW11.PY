class Product: #Создаём класс с именем Продукт
    def __init__(self, name, price=0, stock=0): #Создаем метод конструктора класса для определения параметров объектов этого класса, по умолчанию цена и количество равно нулю если не задано другое
        self.name = name # Задаём параметр имя
        self.price = price # Задаём параметр цена
        self.stock = stock # Задаём параметр количества

    def UpdatePrice(self, newPrice): # Создаём метод для обновление цены товара
        self.price = newPrice # Обновляем цену товара на новую

    def Restock(self, quantity): # Создаем метод для увеличения количества
        self.stock += quantity # Увеличиваем количество

    def GetProductInfo(self): # Создаем метод который возвращает строку с информацией для товара
        return f"Название: {self.name}, Стоимость: {self.price}, Количество: {self.stock}" #возвращаем строку с помощью форматирования-

    def Sell(self, quantity): # Создаем метод который возвращает строку с информацией для товара
        if(quantity<self.stock): # Проверяем больше ли проданное кол-во чем имеется на складе
            self.stock -= quantity # Отнимаем проданное кол-во от имеевшегося на складе
        else: # если больше то
            print("Uncorrect input") # Ошибка


kortoshka = Product("Potato", 150, 10) # Создаем объект класса с указанными параметрами имени, цены и количества
potato = Product("Kortoshka") # Создаем объект класса только с указанным параметром имени
print(kortoshka.GetProductInfo()) # Для проверки выводим строчку с информацией после изменений 
kortoshka.UpdatePrice(250) # Обновляем значение цены на 250
kortoshka.Restock(5) # Обновляем значение количества на 5
print(kortoshka.GetProductInfo()) # Для проверки выводим строчку с информацией после изменений
kortoshka.Sell(61) # Пытаемся продать больше чем есть (выводится ошибка)
print(kortoshka.GetProductInfo()) # Для проверки выводим строчку с информацией после изменений
print(potato.GetProductInfo()) # Для проверки выводим строчку с информацией после изменений